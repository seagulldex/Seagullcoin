{
  "swagger": "2.0",
  "info": {
    "title": "SGLCN-X20 Minting API",
    "description": "API for minting and managing SeagullCoin-only NFTs.",
    "version": "1.0.0"
  },
  "host": "sglcn-x20-api.glitch.me",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/login": {
      "get": {
        "summary": "Login to XUMM",
        "description": "Redirects to the XUMM login page to authenticate.",
        "responses": {
          "302": {
            "description": "Redirect to XUMM authorization page."
          }
        }
      }
    },
    "/callback": {
      "get": {
        "summary": "XUMM OAuth2 Callback",
        "description": "Handles the OAuth2 callback and stores the access token.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The OAuth2 authorization code."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated and stored access token."
          },
          "400": {
            "description": "Missing or invalid code."
          }
        }
      }
    },
    "/pay": {
      "post": {
        "summary": "Check SeagullCoin balance for payment",
        "description": "Verifies if the user has enough SeagullCoin balance to proceed with minting.",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has enough SeagullCoin balance."
          },
          "400": {
            "description": "Insufficient SeagullCoin balance."
          }
        }
      }
    },
    "/mint": {
      "post": {
        "summary": "Mint a new NFT",
        "description": "Mints a new NFT and stores metadata in NFT.Storage.",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The file representing the NFT image."
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The name of the NFT."
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The description of the NFT."
          },
          {
            "name": "domain",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The domain associated with the NFT."
          },
          {
            "name": "collectionName",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "The collection name to which the NFT belongs."
          },
          {
            "name": "collectionIcon",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "The icon representing the collection."
          },
          {
            "name": "properties",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Additional properties for the NFT."
          },
          {
            "name": "walletAddress",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The wallet address to mint the NFT."
          }
        ],
        "responses": {
          "200": {
            "description": "NFT successfully minted.",
            "schema": {
              "$ref": "#/definitions/NFTResponse"
            }
          },
          "400": {
            "description": "Invalid request or missing required parameters."
          },
          "500": {
            "description": "Internal server error during minting."
          }
        }
      }
    },
    "/nfts": {
      "get": {
        "summary": "Get all minted NFTs",
        "description": "Fetches all the minted NFTs and their collections.",
        "responses": {
          "200": {
            "description": "List of all minted NFTs and collections.",
            "schema": {
              "$ref": "#/definitions/NFTList"
            }
          }
        }
      }
    },
    "/buy-nft": {
      "post": {
        "summary": "Buy an NFT",
        "description": "Allows the user to buy an NFT with SeagullCoin.",
        "parameters": [
          {
            "name": "buyerAddress",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT successfully bought."
          },
          "400": {
            "description": "Invalid request or insufficient funds."
          },
          "500": {
            "description": "Internal server error during purchase."
          }
        }
      }
    }
  },
  "definitions": {
    "WalletAddress": {
      "type": "object",
      "properties": {
        "walletAddress": {
          "type": "string",
          "description": "The XRPL wallet address."
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "buyerAddress": {
          "type": "string",
          "description": "The wallet address of the buyer."
        },
        "sellerAddress": {
          "type": "string",
          "description": "The wallet address of the seller."
        },
        "tokenId": {
          "type": "string",
          "description": "The NFT token ID."
        },
        "price": {
          "type": "number",
          "description": "The price of the NFT in SeagullCoin."
        }
      }
    },
    "NFTResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the minting was successful."
        },
        "tokenId": {
          "type": "string",
          "description": "The minted NFT token ID."
        }
      }
    },
    "NFTList": {
      "type": "object",
      "properties": {
        "mintedNFTs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NFTResponse"
          }
        },
        "collections": {
          "type": "object",
          "description": "A map of collection names to their NFTs."
        }
      }
    }
  }
}
