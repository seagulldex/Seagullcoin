{
  "openapi": "3.0.0",
  "info": {
    "title": "SGLCN-X20 Minting API",
    "version": "1.0.0",
    "description": "OpenAPI specification for the SeagullCoin (SGLCN-X20) NFT Minting Platform."
  },
  "servers": [
    {
      "url": "https://sglcn-x20-api.glitch.me"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Initiate XUMM login session",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/pay": {
      "post": {
        "summary": "Initiate payment of 0.5 SeagullCoin",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/validate-payment": {
      "post": {
        "summary": "Validate the payment for NFT minting",
        "responses": {
          "200": {
            "description": "Valid"
          }
        }
      }
    },
    "/mint": {
      "post": {
        "summary": "Mint a new NFT after payment",
        "responses": {
          "200": {
            "description": "NFT minted"
          }
        }
      }
    },
    "/burn": {
      "post": {
        "summary": "Burn an existing NFT",
        "responses": {
          "200": {
            "description": "NFT burned"
          }
        }
      }
    },
    "/nfts": {
      "get": {
        "summary": "List all minted NFTs",
        "responses": {
          "200": {
            "description": "List of NFTs"
          }
        }
      }
    },
    "/nfts/{id}": {
      "get": {
        "summary": "Retrieve a specific NFT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFT details"
          }
        }
      }
    },
    "/nfts/{id}/like": {
      "post": {
        "summary": "Like an NFT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liked"
          }
        }
      }
    },
    "/nfts/{id}/likes": {
      "get": {
        "summary": "Get number of likes on an NFT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Likes count"
          }
        }
      }
    },
    "/user/likes": {
      "get": {
        "summary": "Get NFTs liked by the authenticated user",
        "responses": {
          "200": {
            "description": "Liked NFTs"
          }
        }
      }
    },
    "/collections": {
      "get": {
        "summary": "List all NFT collections",
        "responses": {
          "200": {
            "description": "List of collections"
          }
        }
      },
      "post": {
        "summary": "Create a new NFT collection",
        "responses": {
          "200": {
            "description": "Collection created"
          }
        }
      }
    },
    "/collections/{collectionId}": {
      "get": {
        "summary": "Get NFTs in a collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFTs in collection"
          }
        }
      }
    },
    "/offers": {
      "post": {
        "summary": "Create a new offer to buy or sell an NFT",
        "responses": {
          "200": {
            "description": "Offer created"
          }
        }
      }
    },
    "/offers/{offerId}": {
      "delete": {
        "summary": "Reject or cancel an offer",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer deleted"
          }
        }
      }
    },
    "/accept-offer": {
      "post": {
        "summary": "Accept an offer",
        "responses": {
          "200": {
            "description": "Offer accepted"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user profile details (authenticated)",
        "responses": {
          "200": {
            "description": "User profile"
          }
        }
      }
    },
    "/user/{walletAddress}": {
      "get": {
        "summary": "Get public user profile",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile"
          }
        }
      }
    },
    "/user/username": {
      "post": {
        "summary": "Update username",
        "responses": {
          "200": {
            "description": "Username updated"
          }
        }
      }
    },
    "/user/avatar": {
      "post": {
        "summary": "Upload or update profile picture",
        "responses": {
          "200": {
            "description": "Avatar updated"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "summary": "Send a message to another wallet",
        "responses": {
          "200": {
            "description": "Message sent"
          }
        }
      },
      "get": {
        "summary": "Get inbox messages",
        "responses": {
          "200": {
            "description": "Inbox"
          }
        }
      }
    },
    "/messages/{walletAddress}": {
      "get": {
        "summary": "Get conversation with a specific wallet",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NFT": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "collectionId": {
            "type": "string"
          },
          "likes": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "wallet": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nftId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "buy",
              "sell"
            ]
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}