openapi: 3.0.0
info:
  title: SGLCN-X20 Minting API
  version: "1.0.0"
  description: |
    API for minting and buying NFTs using SeagullCoin (SGLCN-X20).
    - Mint NFTs (with media upload)
    - Buy NFTs
    - Sell NFTs
    - View NFTs for sale
    - XUMM OAuth2 login
    - Place offers and bids on NFTs
    - Auction system for NFTs
    - Manage NFT collections
    - View platform metrics
servers:
  - url: https://sglcn-x20-api.glitch.me
    description: Production server
paths:
  /:
    get:
      summary: Welcome
      description: Welcome message and API information.
      responses:
        '200':
          description: API welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to the SGLCN-X20 Minting API"
  /api/login:
    get:
      summary: XUMM OAuth2 Login
      description: Redirects user to XUMM OAuth2 login page.
      responses:
        '302':
          description: Redirect to XUMM login page
  /mint:
    post:
      summary: Mint a new NFT
      description: Mint a new NFT after verifying SeagullCoin payment.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nft_name:
                  type: string
                  description: Name of the NFT
                nft_description:
                  type: string
                  description: Description of the NFT
                domain:
                  type: string
                  description: Domain linked to the NFT
                properties:
                  type: string
                  description: JSON stringified additional properties
                nft_file:
                  type: string
                  format: binary
                  description: Image or video file for the NFT
      responses:
        '200':
          description: Successfully minted NFT
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  mintResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, payment not found)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  
profile:
  description: |
    User profile data includes their username and profile picture.
  properties:
    profile_picture:
      type: string
      format: uri
      description: |
        IPFS URL of the user's profile picture image. Stored on NFT.Storage.
    username:
      type: string
      description: |
        The username of the user. This is stored in metadata alongside the profile picture.
  example:
    username: "seagullfan123"
    profile_picture: "ipfs://Qm...XYZ"

    /auction/extend:
    post:
      summary: Extend NFT auction duration
      description: Extends an ongoing NFT auction's duration if a new bid is placed within the last 5 minutes of the auction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT auction to extend
                extensionTime:
                  type: integer
                  description: Extension duration in seconds
      responses:
        '200':
          description: Auction successfully extended
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  extendedAuction:
                    type: object
                    properties:
                      newEndTime:
                        type: string
                        format: date-time
        '400':
          description: Bad Request (e.g., auction already extended)
        '500':
          description: Internal Server Error

paths:
  /auction:
    post:
      summary: Create a new auction for an NFT
      description: Allows a user to create an auction for an NFT, including start and end times, and a reserve price.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to auction
                startPrice:
                  type: string
                  description: Starting price for the auction (in SeagullCoin)
                reservePrice:
                  type: string
                  description: Reserve price for the auction (in SeagullCoin)
                startTime:
                  type: string
                  format: date-time
                  description: Start time of the auction
                endTime:
                  type: string
                  format: date-time
                  description: End time of the auction
      responses:
        '200':
          description: Auction successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  auctionId:
                    type: string
                    description: ID of the created auction
        '400':
          description: Bad Request (e.g., missing or invalid parameters)
        '500':
          description: Internal Server Error

  /auction/{auctionId}/bid:
    post:
      summary: Place a bid on an NFT auction
      description: Allows a user to place a bid on an active NFT auction.
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: string
          description: ID of the auction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bidAmount:
                  type: string
                  description: Bid amount in SeagullCoin
      responses:
        '200':
          description: Bid placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  bidId:
                    type: string
                    description: ID of the placed bid
        '400':
          description: Bad Request (e.g., bid amount too low, auction ended)
        '500':
          description: Internal Server Error

  /auction/{auctionId}/offer:
    post:
      summary: Place an offer for an NFT
      description: Allows a user to place an offer for an NFT, separate from auctions.
      parameters:
        - name: auctionId
          in: path
          required: true
          schema:
            type: string
          description: ID of the auction (if applicable) or the NFT ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offerAmount:
                  type: string
                  description: Offer amount in SeagullCoin
      responses:
        '200':
          description: Offer placed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  offerId:
                    type: string
                    description: ID of the placed offer
        '400':
          description: Bad Request (e.g., invalid offer amount)
        '500':
          description: Internal Server Error

paths:
  /analytics/user-activity:
    get:
      summary: Retrieve user activity statistics
      description: Fetches detailed statistics about user activity on the platform, including number of mints, transactions, and other actions.
      responses:
        '200':
          description: User activity successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                    description: Total number of active users
                  totalMints:
                    type: integer
                    description: Total number of NFTs minted
                  totalTransactions:
                    type: integer
                    description: Total number of transactions (buys, sells, bids)
                  mostActiveUser:
                    type: string
                    description: Wallet address of the most active user
        '500':
          description: Internal Server Error

  /analytics/nft-popularity:
    get:
      summary: Retrieve NFT popularity statistics
      description: Fetches statistics on the most popular NFTs on the platform, including the most viewed, bought, and offered.
      responses:
        '200':
          description: NFT popularity successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  mostViewedNFT:
                    type: string
                    description: ID of the most viewed NFT
                  mostBoughtNFT:
                    type: string
                    description: ID of the most bought NFT
                  mostOfferedNFT:
                    type: string
                    description: ID of the most offered NFT
                  totalNFTsListed:
                    type: integer
                    description: Total number of NFTs listed on the platform
        '500':
          description: Internal Server Error

/payment/verify:
    post:
      summary: Verify SeagullCoin payment
      description: Verifies the SeagullCoin payment via a callback or webhook.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  description: The transaction ID of the payment
                amount:
                  type: string
                  description: Amount of SeagullCoin sent
                status:
                  type: string
                  description: Status of the payment (e.g., 'completed')
      responses:
        '200':
          description: Payment verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  paymentResult:
                    type: object
                    properties:
                      transactionId:
                        type: string
                      status:
                        type: string
        '400':
          description: Bad Request (e.g., invalid transaction details)
        '500':
          description: Internal Server Error

  /marketplace/integrate:
    post:
      summary: Integrate with external marketplace
      description: Allows external marketplaces to mint, buy, or sell NFTs using SeagullCoin (SGLCN-X20).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                marketplaceId:
                  type: string
                  description: Marketplace identifier (e.g., 'bidds', 'xrp.cafe')
                action:
                  type: string
                  enum: [mint, buy, sell]
                  description: Action to perform in the marketplace (mint, buy, or sell an NFT)
                nftId:
                  type: string
                  description: ID of the NFT involved
                price:
                  type: string
                  description: SeagullCoin price (if applicable)
      responses:
        '200':
          description: Successfully integrated marketplace action
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  integrationResult:
                    type: object
        '400':
          description: Bad Request (e.g., invalid action or missing fields)
        '500':
          description: Internal Server Error

/buy-nft:
    post:
      summary: Buy an NFT
      description: Purchase an NFT after verifying SeagullCoin payment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to purchase
                price:
                  type: string
                  description: Price to pay in SeagullCoin
      responses:
        '200':
          description: Successfully purchased NFT
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  purchaseResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, payment not verified)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /sell-nft:
    post:
      summary: Sell an NFT
      description: List an NFT for sale after verifying SeagullCoin payment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to sell
                price:
                  type: string
                  description: Price to sell the NFT in SeagullCoin
      responses:
        '200':
          description: Successfully listed NFT for sale
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  saleResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, invalid price)
        '402':
          description: Payment Required (SeagullCoin payment not verified)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /place-offer:
    post:
      summary: Place an offer on an NFT
      description: Place an offer to buy an NFT at a specific price in SeagullCoin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to place the offer on
                offerPrice:
                  type: string
                  description: Offer price in SeagullCoin
      responses:
        '200':
          description: Successfully placed offer
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  offerResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, invalid price)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /place-bid:
    post:
      summary: Place a bid on an NFT
      description: Place a bid to purchase an NFT at a higher price in SeagullCoin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to place a bid on
                bidPrice:
                  type: string
                  description: Bid price in SeagullCoin
      responses:
        '200':
          description: Successfully placed bid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  bidResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, invalid price)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /auction/start:
    post:
      summary: Start an NFT auction
      description: Starts an auction for an NFT with a set reserve price and auction duration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT to start the auction for
                reservePrice:
                  type: string
                  description: Reserve price in SeagullCoin
                duration:
                  type: integer
                  description: Auction duration in seconds
      responses:
        '200':
          description: Successfully started auction
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  auctionResult:
                    type: object
        '400':
          description: Bad Request (e.g., missing fields, invalid price)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /auction/close:
    post:
      summary: Close an NFT auction
      description: Closes an NFT auction and determines the winner.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: ID of the NFT auction to close
      responses:
        '200':
          description: Successfully closed auction
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  closeResult:
                    type: object
        '400':
          description: Bad Request (e.g., auction already closed)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /user/profile:
    get:
      summary: Get user profile
      description: Retrieves the user's profile, including owned NFTs, wallet balance, username, and profile picture.
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  profile:
                    type: object
                    properties:
                      walletAddress:
                        type: string
                        description: User's wallet address
                      username:
                        type: string
                        description: User's username
                      profilePicture:
                        type: string
                        description: URL to the user's profile picture
                      nftsOwned:
                        type: array
                        items:
                          type: string
                        description: List of NFTs owned by the user
                      balance:
                        type: string
                        description: SeagullCoin balance
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /user/transactions:
    get:
      summary: Get user transaction history
      description: Retrieves the user's NFT transaction history (minted, bought, sold).
      responses:
        '200':
          description: Transaction history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        transactionId:
                          type: string
                        nftId:
                          type: string
                        transactionType:
                          type: string
                        price:
                          type: string
                        timestamp:
                          type: string
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
  /metrics:
    get:
      summary: Retrieve platform metrics
      description: Fetches the current statistics like total NFTs minted, SeagullCoin payments processed, etc.
      responses:
        '200':
          description: Metrics successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalMinted:
                    type: integer
                    description: Total NFTs minted
                  totalPayments:
                    type: integer
                    description: Total SeagullCoin payments processed
        '500':
          description: Internal Server Error

  responses:
  '200':
    description: Success
    headers:
      X-RateLimit-Limit:
        description: Maximum number of requests allowed in a given period
        schema:
          type: integer
          example: 100
      X-RateLimit-Remaining:
        description: Number of requests remaining in the current period
        schema:
          type: integer
          example: 99
      X-RateLimit-Reset:
        description: Time when the rate limit will reset
        schema:
          type: string
          format: date-time
          example: "2025-04-30T15:00:00Z"

paths:
  /notifications:
    post:
      summary: Trigger notification for user
      parameters:
        - name: userId
          in: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
                description: The user to send the notification to
              eventType:
                type: string
                enum: [offer_accepted, auction_ending]
                description: The type of event triggering the notification
              message:
                type: string
                description: The message to send to the user
      responses:
        '200':
          description: Notification successfully sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: "Notification sent successfully"
        '400':
          description: Bad Request (missing required parameters)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: "Missing userId or eventType"

paths:
  /user/{userId}/transactions:
    get:
      summary: Get transactions for a user with pagination
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            description: Page number (default 1)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            description: Number of transactions per page (default 10)
      responses:
        '200':
          description: A list of transactions for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  totalCount:
                    type: integer
                    example: 100
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'

  /collections:
    get:
      summary: Get all NFT collections with pagination
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
                  totalCount:
                    type: integer
                    example: 50
                  collections:
                    type: array
                    items:
                      $ref: '#/components/schemas/Collection'

responses:
  '200':
    description: Success
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: success
            data:
              type: object
              additionalProperties: true
  '400':
    description: Bad Request (Validation Error)
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: error
            error:
              type: string
              example: "Missing required parameter: token"
  '401':
    description: Unauthorized (XUMM OAuth2)
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: error
            error:
              type: string
              example: "Unauthorized access"
  '404':
    description: Not Found (Resource does not exist)
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: error
            error:
              type: string
              example: "NFT not found"
  '500':
    description: Internal Server Error
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: string
              example: error
            error:
              type: string
              example: "Internal server error, please try again later"

/collections:
    get:
      summary: Retrieve all collections
      description: Fetches a list of all NFT collections available on the platform.
      responses:
        '200':
          description: Collections retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    collectionName:
                      type: string
                      description: The name of the collection
                    collectionLogo:
                      type: string
                      description: URL to the collection's logo image
                    collectionDescription:
                      type: string
                      description: A brief description of the collection
    post:
      summary: Create a new NFT collection
      description: Allows users to create a new collection by specifying a name, description, and logo.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                collectionName:
                  type: string
                  description: Name of the collection
                collectionDescription:
                  type: string
                  description: Description of the collection
                collectionLogo:
                  type: string
                  format: binary
                  description: Logo image file for the collection
      responses:
        '200':
          description: Collection created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  collection:
                    type: object
                    properties:
                      collectionName:
                        type: string
                      collectionLogo:
                        type: string
                      collectionDescription:
                        type: string
        '400':
          description: Bad Request (e.g., missing fields, invalid file format)
        '500':
          description: Internal Server Error
      security:
        - XUMM_OAuth2: []
components:
  securitySchemes:
    XUMM_OAuth2:
      type: oauth2
      authorizationUrl: https://xumm.app/oauth2/authorize
      tokenUrl: https://xumm.app/oauth2/token
      scopes:
        user:profile: Access user profile and wallet info
        user:transactions: Access user transaction history
        nft:mint: Access NFT minting functionality
        nft:buy: Access NFT buying functionality
        nft:sell: Access NFT selling functionality
        nft:offer: Access NFT offer placing functionality




