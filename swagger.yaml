openapi: 3.0.0
info:
  title: SGLCN-X20 Minting API
  description: API for minting and interacting with SeagullCoin-based NFTs.
  version: 1.0.0
  contact:
    name: Bored Seagull Club
    email: boredseagulls@gmail.com
    url: https://linktr.ee/boredseagullclub

servers:
  - url: 'https://sglcn-x20-api.glitch.me/api'

paths:
  /login/start:
    get:
      summary: Start XUMM OAuth2 login
      description: Creates a XUMM SignIn payload and returns payload info.
      responses:
        '200':
          description: Payload created
          content:
            application/json:
              schema:
                type: object
                properties:
                  payloadUuid:
                    type: string
                    description: UUID of the XUMM payload
                  qrUrl:
                    type: string
                    description: URL of the QR code for user login

  /login/check:
    get:
      summary: Check XUMM OAuth2 login status
      description: Checks if a user has successfully logged in via XUMM.
      parameters:
        - in: query
          name: payloadUuid
          required: true
          schema:
            type: string
          description: The XUMM payload UUID to check login status
      responses:
        '200':
          description: Login status (signed or not)
          content:
            application/json:
              schema:
                type: object
                properties:
                  signed:
                    type: boolean
                    description: Whether the payload was signed (login success)
                  walletAddress:
                    type: string
                    nullable: true
                    description: The XRPL wallet address of the logged-in user
        '400':
          description: Missing or invalid payloadUuid
        '500':
          description: Server error checking login status

  /mint:
    post:
      summary: Mint a new NFT
      description: Allows users to mint a new NFT with a SeagullCoin payment.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nft_file:
                  type: string
                  format: binary
                  description: The file representing the NFT media.
                nft_name:
                  type: string
                  description: The name of the NFT.
                nft_description:
                  type: string
                  description: The description of the NFT.
                domain:
                  type: string
                  description: Optional domain name associated with the NFT.
                properties:
                  type: string
                  description: Optional JSON string of NFT properties.
      responses:
        '200':
          description: NFT successfully minted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  nftId:
                    type: string
                  message:
                    type: string
        '400':
          description: Missing required fields
        '402':
          description: Payment required (0.5 SeagullCoin)
        '500':
          description: Internal server error

  /check-ownership/{nftId}:
    get:
      summary: Check NFT ownership
      description: Checks if a user owns a specific NFT.
      parameters:
        - in: path
          name: nftId
          required: true
          schema:
            type: string
          description: The NFT ID to check ownership for
      responses:
        '200':
          description: Ownership information
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    type: string
                    description: Wallet address of the NFT owner
        '400':
          description: Missing NFT ID
        '404':
          description: Ownership not found
        '500':
          description: Internal server error

  /buy-nft:
    post:
      summary: Buy an NFT
      description: Allows users to buy an NFT by sending a SeagullCoin transaction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: The ID of the NFT to buy
                price:
                  type: number
                  format: float
                  description: The price of the NFT in SeagullCoin
                currency:
                  type: string
                  enum: [SeagullCoin]
                  description: The currency used for the purchase (must be SeagullCoin)
      responses:
        '200':
          description: NFT successfully purchased
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  txHash:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid parameters or wrong currency
        '402':
          description: Insufficient SeagullCoin payment
        '500':
          description: Internal server error

  /nft-listings:
    get:
      summary: Get all NFT listings
      description: Returns all active NFT listings on the platform.
      responses:
        '200':
          description: A list of all NFT listings
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  listings:
                    type: array
                    items:
                      type: object
                      properties:
                        nftId:
                          type: string
                        price:
                          type: number
                          format: float
                        owner:
                          type: string

  /unlist-nft:
    post:
      summary: Unlist an NFT from sale
      description: Unlist an NFT from the marketplace if the user is the owner.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: The NFT ID to unlist
      responses:
        '200':
          description: NFT successfully unlisted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: User not logged in or unauthorized action
        '500':
          description: Internal server error

  /sell-nft:
    post:
      summary: Sell an NFT
      description: List an NFT for sale in the marketplace with a price in SeagullCoin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nftId:
                  type: string
                  description: The NFT ID to list for sale
                price:
                  type: number
                  format: float
                  description: The sale price in SeagullCoin
                currency:
                  type: string
                  enum: [SeagullCoin]
                  description: The currency in which the NFT is listed (must be SeagullCoin)
      responses:
        '200':
          description: NFT successfully listed for sale
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid parameters or wrong currency
        '500':
          description: Internal server error
